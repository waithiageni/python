Python 3.7.2 (tags/v3.7.2:9a3ffc0492, Dec 23 2018, 22:20:52) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> x = [1,2,3,4,5]
>>> l = [a,b,c,d]
Traceback (most recent call last):
  File "<pyshell#1>", line 1, in <module>
    l = [a,b,c,d]
NameError: name 'a' is not defined
>>> l = ['a','b','c','d']
>>> w =[1,'a']
>>> fruits = ['banana','apple','pineapple','melon','mango']
>>> print(fruits)
['banana', 'apple', 'pineapple', 'melon', 'mango']
>>> for fruit in fruits:
	print(fruit)

	
banana
apple
pineapple
melon
mango
>>> numbers = [0,1,2,3,4,5,6,7,8,9]
>>> for number in numbers:
	print number
	
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(number)?
>>> 
>>> for number in numbers:
	print(number)

	
0
1
2
3
4
5
6
7
8
9
>>> fruits[0]
'banana'
>>> fruits[4]
'mango'
>>> fruits[0:4]
['banana', 'apple', 'pineapple', 'melon']
>>> fruits[2:5]
['pineapple', 'melon', 'mango']
>>> 
fruits[3:]
['melon', 'mango']
>>> a=[1,2,3]
>>> b=[4,5,6]
>>> c=a+b
>>> c
[1, 2, 3, 4, 5, 6]
>>> d=a*3
>>> d
[1, 2, 3, 1, 2, 3, 1, 2, 3]
>>> fruits
['banana', 'apple', 'pineapple', 'melon', 'mango']
>>> fruits.append('grape')
>>> fruits
['banana', 'apple', 'pineapple', 'melon', 'mango', 'grape']
>>> fruits.extend(['peach','kiwi'])
>>> fruits
['banana', 'apple', 'pineapple', 'melon', 'mango', 'grape', 'peach', 'kiwi']
>>> fruits.remove('banana')
>>> fruits
['apple', 'pineapple', 'melon', 'mango', 'grape', 'peach', 'kiwi']
>>> fruits.sort()
>>> fruits
['apple', 'grape', 'kiwi', 'mango', 'melon', 'peach', 'pineapple']
>>> fruits.reverse()
>>> fruits
['pineapple', 'peach', 'melon', 'mango', 'kiwi', 'grape', 'apple']
>>> fruits.pop()
'apple'
>>> del fruits[0]
>>> fruits
['peach', 'melon', 'mango', 'kiwi', 'grape']
>>> fruits.replace('peach','blackcurrant')
Traceback (most recent call last):
  File "<pyshell#46>", line 1, in <module>
    fruits.replace('peach','blackcurrant')
AttributeError: 'list' object has no attribute 'replace'
>>> fruit.replace('peach','blackcurrant')
'mango'
>>> fruits
['peach', 'melon', 'mango', 'kiwi', 'grape']
>>> fruits[0]='blackcurrant'
>>> fruits
['blackcurrant', 'melon', 'mango', 'kiwi', 'grape']
>>> numbers
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> sum(numbers)
45
>>> min(numbers)
0
>>> max(numbers)
9
>>> fruits.append('mango')
>>> fruits
['blackcurrant', 'melon', 'mango', 'kiwi', 'grape', 'mango']
>>> fruits.append('kiwi')
>>> fruits
['blackcurrant', 'melon', 'mango', 'kiwi', 'grape', 'mango', 'kiwi']
>>> fruits.count('mango')
2
>>> fruits.count('kiwi')
2
>>> min(fruits)
'blackcurrant'
>>> max(fruits)
'melon'
>>> n=range(10)
>>> n
range(0, 10)
>>> for x in n
SyntaxError: invalid syntax
>>> for x in n
SyntaxError: invalid syntax
>>> for x in n:
	print(x)

	
0
1
2
3
4
5
6
7
8
9
>>> n=range(10,20)
>>> n
range(10, 20)
>>> for x in n:
	print(x)

	
10
11
12
13
14
15
16
17
18
19
>>> for f in fruits:
	print(f)

	
blackcurrant
melon
mango
kiwi
grape
mango
kiwi
>>> e=[x*10 for x in a]
>>> e
[10, 20, 30]
>>> f=[x*2 for x in e]
>>> f
[20, 40, 60]
>>> e
[10, 20, 30]
>>> f=[x+10 for x in e]
>>> f
[20, 30, 40]
>>> g=range(25,50)
>>> h=[x*x for x in g]
>>> h
[625, 676, 729, 784, 841, 900, 961, 1024, 1089, 1156, 1225, 1296, 1369, 1444, 1521, 1600, 1681, 1764, 1849, 1936, 2025, 2116, 2209, 2304, 2401]
>>> g=range(25,50)
>>> g=range(25,50)
>>> g
range(25, 50)
>>> for x in g:
	print(x)

	
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
>>> h=[x*x for x in g]
>>> h
[625, 676, 729, 784, 841, 900, 961, 1024, 1089, 1156, 1225, 1296, 1369, 1444, 1521, 1600, 1681, 1764, 1849, 1936, 2025, 2116, 2209, 2304, 2401]
>>> h=[]
>>> for x in g:
	h,append(x)
	h

	
Traceback (most recent call last):
  File "<pyshell#108>", line 2, in <module>
    h,append(x)
NameError: name 'append' is not defined
>>> for x in g:
	h.append(x)

	
>>> 
>>> for x in g:
	h.append(x)
	h

	
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48]
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]
>>> for x in g:
	h.append(x)

	
>>> h
[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]
>>> h=[]
>>> for x in g:
	y=x*x
	h.append(y)

	
>>> h
[625, 676, 729, 784, 841, 900, 961, 1024, 1089, 1156, 1225, 1296, 1369, 1444, 1521, 1600, 1681, 1764, 1849, 1936, 2025, 2116, 2209, 2304, 2401]
>>> x
49
>>> x=[100,200,300,400,500]
>>> y=[-x/7 for x in y]
Traceback (most recent call last):
  File "<pyshell#126>", line 1, in <module>
    y=[-x/7 for x in y]
TypeError: 'int' object is not iterable
>>> x=[100,200,300,400,500]
>>> y=[]
>>> for x in y:
	y=x/7
	y.append(x)

	
>>> y
[]
>>> y=[z%7 for z in x]
>>> y
[2, 4, 6, 1, 3]
>>> y=[]
>>> for z in x
SyntaxError: invalid syntax
>>> y=[]
>>> for z in x:
	y=z%7
	y.append(y)

	
Traceback (most recent call last):
  File "<pyshell#143>", line 3, in <module>
    y.append(y)
AttributeError: 'int' object has no attribute 'append'
>>> y=[]
>>> for z in x:
	x=z

	
>>> for z in x:
	x=z%7
	y.append(x)

	
Traceback (most recent call last):
  File "<pyshell#150>", line 1, in <module>
    for z in x:
TypeError: 'int' object is not iterable
>>> y=[]
>>> for z in x:
	z=x%7
	y.append(x)

	
Traceback (most recent call last):
  File "<pyshell#155>", line 1, in <module>
    for z in x:
TypeError: 'int' object is not iterable
>>> for x in x:
	x=x%7
	y.append(x)

	
Traceback (most recent call last):
  File "<pyshell#157>", line 1, in <module>
    for x in x:
TypeError: 'int' object is not iterable
>>> y=[]
>>> for x in x:
	x=x%7
	y.append(x)

	
Traceback (most recent call last):
  File "<pyshell#162>", line 1, in <module>
    for x in x:
TypeError: 'int' object is not iterable
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> for z in x:
	q=z%7
	y.append(q)

	
Traceback (most recent call last):
  File "<pyshell#170>", line 1, in <module>
    for z in x:
TypeError: 'int' object is not iterable
>>> x
500
>>> x=[100,200,300,400,500]
>>> x
[100, 200, 300, 400, 500]
>>> for z in x:
	q=z%7
	y.append(q)

	
>>> y
[2, 4, 6, 1, 3]
>>> 
>>> x
[100, 200, 300, 400, 500]
>>> 

>>> z
500
>>> forx=[100,200,300,400,500]
>>> x
[100, 200, 300, 400, 500]
>>> for z in x:
	q=z%7
	y.append(q)

	
>>> y
[2, 4, 6, 1, 3, 2, 4, 6, 1, 3]
>>> a=range(99,109)
>>> a
range(99, 109)
>>> for c in a:
	d=c**c
	y.append(d)

	
>>> y

>>> a=range(99,109)
>>> b=(x*x for x in a)
>>> b
<generator object <genexpr> at 0x01E8ACB0>
>>> b=[x*x for x in a]
>>> b
[9801, 10000, 10201, 10404, 10609, 10816, 11025, 11236, 11449, 11664]
>>> 
